# -*- coding: utf-8 -*-
"""Assignment3ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IdKU0grN_8wGxdHsAgFGGzPxcc6mkOkr
"""



"""**Assignment 3**

**Apply K-Means Clustering technique of machine learning to analyze the Bostan
dataset.
Use Elbow method to find best value of K.**
"""



from sklearn.datasets import load_boston
data = load_boston()

import pandas as pd

dataframe = pd.DataFrame(data= data['data'],
                     columns= data['feature_names'])
dataframe['target']= data['target']
dataframe

dataframe.info()

dataframe.isnull().sum()

x=dataframe.drop(['target'],axis=1).values
y=dataframe['target'].values
print(x.shape,y.shape)

from sklearn.model_selection import train_test_split
import numpy as np
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=30,random_state=1)



from sklearn.cluster import KMeans
cal=[]
for i in range(1,12):
  kmeansmodel=KMeans(n_clusters=i,max_iter=500,init="k-means++",n_init=10,random_state=0)
  kmeansmodel.fit(x_train,y_train)
  cal.append(kmeansmodel.inertia_)

import matplotlib.pyplot as plt
plt.plot(cal)
plt.title('Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

kmeansmodel=KMeans(n_clusters=3,max_iter=500,init="k-means++",n_init=10,random_state=0)
kmeansmodel.fit(x_train,y_train)

from sklearn.metrics import accuracy_score
print("Number of clusters: ",2)
print("Accuracy: ",kmeansmodel.score(x_test,y_test))

kmeansmodel.predict(x_test)

